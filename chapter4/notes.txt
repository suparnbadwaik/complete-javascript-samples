Functions are first-class objects that behave the same way as other values.

Function literals can be defined using the function declaration, or by creating
a function expression by assigning an anonymous function to a variable.
All functions return a value. If this is not explicitly stated, the function will
return undefined.
A parameter is a value that is written in the parentheses of a function
declaration and can be used like a variable inside the functionâ€™s body.
An argument is a value that is provided to a function when it is invoked.
The arguments variable is an array-like object that allows access to each
argument provided to the function using index notation.
The rest operator can be used to access multiple arguments as an array.
Default arguments can be supplied to a function by assigning them to the
parameters.
Arrow functions are a new shorthand notation that can used for writing
anonymous functions in ES6.
Function declarations can be invoked before they are defined because they are
hoisted to the top of the scope, but function expressions cannot be invoked
until after they are defined.
A callback is a function that is provided as an argument to another function.